import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt
fashion_mnist=keras.datasets.fashion_mnist
(train_images, train_labels),(test_images, test_labels)=fashion_mnist.load_data()
class_names = ['T-shirt/top','Trousers','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']
train_images.shape
len(train_labels)
train_labels
test_images.shape
train_images=train_images/255.0
test_images=test_images/255.0
#now we train
train_images=train_images/255.0
test_images=test_images/255.0
#we now show different tyoe of garments
plt.figure(figsize=(15, 15))
for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(train_images[i], cmap=plt.cm.binary)
  plt.xlabel(class_names[train_labels[i]])
plt.show()
model=keras.Sequential([
keras.layers.Flatten(input_shape=(28,28)),
keras.layers.Dense(128, activation=tf.nn.relu),
keras.layers.Dense(10, activation=tf.nn.softmax)
])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
#now we train the model
history=model.fit(train_images, train_labels, epochs=50,validation_split=0.2)
test_loss, test_acc=model.evaluate(test_images,test_labels)
print("test accuracy = ",test_acc)
PRED = model.predict(test_images)
test_images.shape
test_images
np.argmax(PRED[0])
# put i as any value for predicting the garment type
i=0
plt.figure(figsize=(6,3))
plt.subplot(1,2,1)
plot_image(i, PRED,test_labels, test_images)
plt.subplot(1,2,2)
plot_value_array(i, PRED, test_labels)
plt.show() 





